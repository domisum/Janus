<configuration>
	<timestamp key="bySecond" datePattern="Z_yyyy-MM-dd_HH-mm-ss_SSS"/>

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>[%d{HH:mm:ss.SSS} %level %thread] %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="FILE" class="ch.qos.logback.core.FileAppender">
		<file>logs/${bySecond}.log</file>
		<encoder>
			<pattern>[%d{Z yyyy-MM-dd HH:mm:ss.SSS} %level] [%thread] %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="FILE_JSON" class="ch.qos.logback.core.FileAppender">
		<file>logs/json/${bySecond}.jsonLog</file>
		<encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
			<providers>
				<timestamp>
					<fieldName>timestamp</fieldName>
				</timestamp>
				<message/>
				<loggerName>
					<fieldName>logger</fieldName>
				</loggerName>
				<threadName>
					<fieldName>thread</fieldName>
				</threadName>
				<logLevel/>
				<stackTrace/>
				<context/>
				<tags/>
			</providers>
		</encoder>
	</appender>

	<appender name="SENTRY" class="io.sentry.logback.SentryAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>WARN</level>
		</filter>
	</appender>

	<root level="INFO">
		<appender-ref ref="STDOUT"/>
		<appender-ref ref="FILE"/>
		<appender-ref ref="FILE_JSON"/>
		<appender-ref ref="SENTRY"/>
	</root>
</configuration>
